apiVersion: v1
kind: PersistentVolume
metadata:
  name: web-app-mock-api-server-PV  # (important) este nombre del PV deberá de coincidir con el PVC más adelante
spec:
  capacity:
    storage: 3Gi # 1Gi  # size
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    # path: ./../assets/ # no recomendado utilizar paths relativos por la incompatibilidad con distintos tipos de cluster, además de q kubernetes no permite ".."
    path: /opt/volumes/web-app-mock-api-server/   # YOUR-PATH-PV  # ubicación en el nodo master del cluster
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: web-app-mock-api-server-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app-mock-api-server-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-app-mock-api-server
  template:
    metadata:
      labels:
        app: web-app-mock-api-server
    spec:
      containers:
        - name: web-app-mock-api-server-container
          image: registry.gitlab.com/apiwebprojects/mock-server-project:latest
          imagePullPolicy: IfNotPresent # Always solo para desarrollo lo mantenemos
          ports:
            - containerPort: 8080
            - containerPort: 8081
          volumeMounts:
            - name: web-app-mock-api-server-volume
              mountPath: /opt/media/assets/
            - name: web-app-mock-api-server-volume
              mountPath: /opt/media/temp_files/
          env:
            - name: port
              value: 8080
            - name: app_name
              value: some example
      volumes:
        - name: web-app-mock-api-server-volume
          persistentVolumeClaim:
            claimName: web-app-mock-api-server-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: web-app-mock-api-server-service
spec:
  type: NodePort
  selector:
    app: web-app-mock-api-server #Las etiquetas de selector que coinciden con las del Deployment para indicar qué Pods deben exponerse a través del servicio.
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30000
    - protocol: UDP
      port: 8081
      targetPort: 8081
      nodePort: 30001